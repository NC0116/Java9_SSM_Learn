<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.Dao.IUserDao">

    <!--    配置查询结果的列名和实体属性名的对应关系-->
    <!--    id 给定一个唯一标识， 是给select标签引用用的-->
    <!--    type是指 实体类的全限定类名-->
<!--    配置查询所有用户的sql-->

    <resultMap id="userMap" type="com.neusoft.domain.User">

        <!--        id标签 主键字段的对应-->

        <id property="userId" column="id"></id>

        <!--       result标签 用于指定非主键  ， column是数据库中列名-->
        <!--        property 用于指定实体类属性名名称-->

        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userBirthday" column="birthday"></result>
        <result property="userSex" column="sex"></result>
    </resultMap>

    <select id="findAll" resultMap="userMap">
        select * from user
    </select>

    <select id="findById" parameterType="INT" resultMap="userMap">
        select * from user where id=#{uid} ;
    </select>

    <insert id="saveUser" parameterType="com.neusoft.domain.User"  >
        <!--    配置保存时获取插入id-->
        --         配置保存时获取插入id keyColumn数据库中的列名 keyProperty实体类
        <selectKey keyColumn="id" keyProperty="userId" resultType="int">
            select last_insert_id();
        </selectKey>
        insert into user (username,birthday,address,sex) values(#{userName},#{userBirthday},#{userAddress},#{userSex});
    </insert>

<!--    更新用户-->
    <update id="updateUser" parameterType="com.neusoft.domain.User" >
        update user set username=#{userName},birthday=#{userBirthday},sex=#{userSex},address=#{userAddress} where id=#{id};
    </update>

<!--    删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer"  >
      delete from user where id=#{userId};
    </delete>

<!--    //根据姓名模糊查询-->
    <select id="findByName" parameterType="String" resultType="com.neusoft.domain.User">
        select * from user where username like #{userName};
--           select * from user where username like '%${value}%';
    </select>

<!--    //查询总记录数-->
    <select id="findCount" resultType="Integer">
        select count(*) from user;
    </select>
</mapper>
<!--持久层的映射文件-->